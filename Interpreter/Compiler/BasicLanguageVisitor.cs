//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/raluc/FACULTATE/LFC/Compiler/Compiler/BasicLanguage.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="BasicLanguageParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IBasicLanguageVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] BasicLanguageParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStmt([NotNull] BasicLanguageParser.ReturnStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDefinition([NotNull] BasicLanguageParser.FunctionDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] BasicLanguageParser.ParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] BasicLanguageParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] BasicLanguageParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentList([NotNull] BasicLanguageParser.ArgumentListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] BasicLanguageParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.blockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStmt([NotNull] BasicLanguageParser.BlockStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] BasicLanguageParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] BasicLanguageParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] BasicLanguageParser.ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.assignmentStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignExpr([NotNull] BasicLanguageParser.AssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddAssignExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.assignmentStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddAssignExpr([NotNull] BasicLanguageParser.AddAssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SubAssignExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.assignmentStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubAssignExpr([NotNull] BasicLanguageParser.SubAssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulAssignExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.assignmentStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulAssignExpr([NotNull] BasicLanguageParser.MulAssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DivAssignExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.assignmentStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivAssignExpr([NotNull] BasicLanguageParser.DivAssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ModAssignExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.assignmentStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModAssignExpr([NotNull] BasicLanguageParser.ModAssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.exprStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprStmt([NotNull] BasicLanguageParser.ExprStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrefixIncrementExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixIncrementExpr([NotNull] BasicLanguageParser.PrefixIncrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AndExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpr([NotNull] BasicLanguageParser.AndExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LeqExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeqExpr([NotNull] BasicLanguageParser.LeqExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostfixIncrementExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixIncrementExpr([NotNull] BasicLanguageParser.PostfixIncrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FloatValueExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatValueExpr([NotNull] BasicLanguageParser.FloatValueExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StringValueExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringValueExpr([NotNull] BasicLanguageParser.StringValueExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GeqExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeqExpr([NotNull] BasicLanguageParser.GeqExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DoubleValueExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoubleValueExpr([NotNull] BasicLanguageParser.DoubleValueExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LtExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLtExpr([NotNull] BasicLanguageParser.LtExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GtExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGtExpr([NotNull] BasicLanguageParser.GtExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IntValueExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntValueExpr([NotNull] BasicLanguageParser.IntValueExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostfixDecrementExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixDecrementExpr([NotNull] BasicLanguageParser.PostfixDecrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OrExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpr([NotNull] BasicLanguageParser.OrExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrefixDecrementExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixDecrementExpr([NotNull] BasicLanguageParser.PrefixDecrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulDivExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulDivExpr([NotNull] BasicLanguageParser.MulDivExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EqExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqExpr([NotNull] BasicLanguageParser.EqExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NeqExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNeqExpr([NotNull] BasicLanguageParser.NeqExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functionCallExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpr([NotNull] BasicLanguageParser.FunctionCallExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableExpr([NotNull] BasicLanguageParser.VariableExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpr([NotNull] BasicLanguageParser.NotExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ModExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModExpr([NotNull] BasicLanguageParser.ModExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExpr([NotNull] BasicLanguageParser.ParenExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddSubExpr</c>
	/// labeled alternative in <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddSubExpr([NotNull] BasicLanguageParser.AddSubExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStmt([NotNull] BasicLanguageParser.IfStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.elseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseStmt([NotNull] BasicLanguageParser.ElseStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStmt([NotNull] BasicLanguageParser.WhileStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStmt([NotNull] BasicLanguageParser.ForStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.multiDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiDeclaration([NotNull] BasicLanguageParser.MultiDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.multiAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiAssignment([NotNull] BasicLanguageParser.MultiAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprList([NotNull] BasicLanguageParser.ExprListContext context);
}
